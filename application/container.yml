# The contents of this file can be overriden by container_overrides.yml. See
# container_overrides_example.yml.

parameters:
  log.recipients: ['bart@triquanta.nl', 'gerben@triquanta.nl', 'monitoring@triquanta.nl', 'beheer@triquanta.nl']
  log.sender: 'support@triquanta.nl'
  log.file: '/var/log/tam.log'
  solr.phantom:
    endpoint:
      localhost:
        host: 192.168.50.5
        port: 8080
        path: /solr/phantomcore
        timeout: 30
  database.host_name: 192.168.50.05
  database.database_name: inspector
  database.user_name: inspector
  database.password: z31lb00t
  phantomjs.executable: /usr/bin/phantomjs
  phantomjs.timeout: 60
  google_pagespeed.api_url: https://www.googleapis.com/pagespeedonline/v1/runPagespeed
  google_pagespeed.api_key: $$$EXAMPLE$$$
  google_pagespeed.api_strategy: mobile
  google_pagespeed.api_fetch_limit: 10
  queue.host: localhost
  queue.port: 5672
  queue.user: guest
  queue.password: guest
  testing.test_run_group_flooding_threshold: 3
  worker.ttl: 300
  tmp_directory: /tmp/accessibilitymonitor
  testing.retest_threshold: 21600
  testing.max_failed_test_runs: 2
  logger.mail.subject: 'Log messages for Gewoon Toegankelijk'

services:
  worker:
    class: \Triquanta\AccessibilityMonitor\Worker
    arguments: ['@logger', '@testing.tester', '@testing.result_storage', '@queue', '%worker.ttl%']
  queue:
    class: \PhpAmqpLib\Connection\AMQPStreamConnection
    arguments: ['%queue.host%', '%queue.port%', '%queue.user%', '%queue.password%']
  database:
    class: \Triquanta\AccessibilityMonitor\Database
    arguments: ['%database.host_name%', '%database.database_name%', '%database.user_name%', '%database.password%']
  testing.result_storage:
    class: \Triquanta\AccessibilityMonitor\Storage
    arguments: ['@database', '@solr.client.phantom', '@queue', '@logger', '%testing.test_run_group_flooding_threshold%']
  solr.client.phantom:
    class: \Triquanta\AccessibilityMonitor\SolariumClient
    arguments: ['%solr.phantom%']
    calls:
      - [setEventDispatcher, ['@event_dispatcher']]
  phantomjs:
    class: \Triquanta\AccessibilityMonitor\PhantomJs
    arguments: ['@logger', '%phantomjs.executable%', '%phantomjs.timeout%', '%root_directory%', '%tmp_directory%']
  testing.retester:
    class: \Triquanta\AccessibilityMonitor\Testing\ReTester
    arguments: ['@logger', '@testing.result_storage', '@queue', '%testing.retest_threshold%']
  testing.tester:
    class: \Triquanta\AccessibilityMonitor\Testing\StorageBasedTester
    arguments: ['@logger', '@testing.tester.grouped', '@testing.result_storage', '%testing.max_failed_test_runs%']
  testing.tester.grouped:
    class: \Triquanta\AccessibilityMonitor\Testing\GroupedTester
    arguments: ['@logger']
    calls:
      - [addTester, ['@testing.tester.wappalyzer']]
      - [addTester, ['@testing.tester.google_pagespeed']]
      - [addTester, ['@testing.tester.quail']]
  testing.tester.wappalyzer:
    class: \Triquanta\AccessibilityMonitor\Testing\WappalyzerTester
    arguments: ['@phantomjs']
  testing.tester.quail:
    class: \Triquanta\AccessibilityMonitor\Testing\QuailTester
    arguments: ['@phantomjs', '@logger']
  testing.tester.google_pagespeed:
    class: \Triquanta\AccessibilityMonitor\Testing\GooglePageSpeedTester
    arguments: ['@logger', '@http_client', '%google_pagespeed.api_key%', '%google_pagespeed.api_url%', '%google_pagespeed.api_strategy%']
  logger:
    class: \Monolog\Logger
    arguments: ['global']
    calls:
      - [pushHandler, ['@monolog.handler.console']]
      - [pushHandler, ['@monolog.handler.mail']]
      - [pushHandler, ['@monolog.handler.file']]
  monolog.handler.console:
    class: \Symfony\Bridge\Monolog\Handler\ConsoleHandler
  monolog.handler.mail:
    class: \Monolog\Handler\NativeMailerHandler
    arguments: ['%log.recipients%', '%logger.mail.subject%', '%log.sender%', 500]
  monolog.handler.file:
    class: \Monolog\Handler\StreamHandler
    arguments: ['%log.file%', 100]
  event_dispatcher:
    class: \Symfony\Component\EventDispatcher\EventDispatcher
    calls:
      - [addSubscriber, ['@monolog.handler.console']]
  http_client:
    class: GuzzleHttp\Client
